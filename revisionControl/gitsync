#!/bin/bash
set -o pipefail

PROG=`basename $0`
STARTDIR=`pwd`

usage() {
  cat <<EOF
$PROG [ -v ] [ dir [ ... ] ]

Synchronize the listed directories with their git remotes.
If no directories are specified, try updating the current
working directory.
EOF
}

gitSyncFunc() {
  local REMOTES="origin `git remote | grep -v origin`"
  for REMOTE in $REMOTES ; do
    git fetch $REMOTE                   || exit 2
# TODO: run git submodule update --init for uninitialized submodules
    git submodule update --recursive    || exit 2
  done
}

while getopts "v" opt ; do
  case $opt in
    v) set -x
       ;;
  esac
done

shift $(($OPTIND - 1))

if [ $# -eq 0 ] ; then
  if [ ! -d .git ] ; then
    echo $PROG: current directory is not a git repository
    usage
    exit 1
  fi
  gitSyncFunc   || exit 2
else
  STARTDIR=`pwd`
  for DIR in $@ ; do
    cd $DIR       || exit 2
    gitSyncFunc   || exit 2
    cd $STARTDIR  || exit 2
  done
fi
