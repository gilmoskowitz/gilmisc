#!/bin/bash
set -o pipefail

PROG=`basename $0`
STARTDIR=`pwd`

usage() {
  cat <<EOF
$PROG [ dir [ ... ] ]

Synchronize the listed directories with their git remotes.
If no directories are specified, try updating the current
working directory.
EOF
}

gitSyncFunc() {
# TODO: git branch --list "*" ???
  STARTBR=`git branch | awk '/^\*/ { print $2 }'`
  if [ "$?" -ne 0 ] ; then exit 2 ; fi

  git checkout master                   || exit 2

  for REMOTE in origin `git remote | grep -v origin` ; do
    git fetch $REMOTE                   || exit 2
    git merge $REMOTE/master            || exit 2
# TODO: run git submodule update --init for uninitialized submodules
    git submodule update --recursive    || exit 2
    git push origin master              || exit 2
  done

  git checkout $STARTBR                 || exit 2
}

if [ $# -eq 0 ] ; then
  if [ ! -d .git ] ; then
    echo $PROG: current directory is not a git repository
    usage
    exit 1
  fi
  gitSyncFunc   || exit 2
else
  STARTDIR=`pwd`
  for DIR in $@ ; do
    cd $DIR       || exit 2
    gitSyncFunc   || exit 2
    cd $STARTDIR  || exit 2
  done
fi
